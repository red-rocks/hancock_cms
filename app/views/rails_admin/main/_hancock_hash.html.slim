- case field.editor_type.to_sym
- when :default, :standard, :main, :text, :text_area, :textarea, :string
  ruby:
    _opts = {}
    _opts[:rows] = 10
    _opts[:cols] = 80
    _opts[:class] = 'form-control'
    _opts[:value] = field.formatted_value
    _opts[:style] = "font-family: monospace"
    
  = form.text_area field.string_method, _opts

- when :fixed_keys
  - field.value.each_pair do |name, val|
    p
      = link_to "(изм)", "#", class: "hash_element_renamer_link"
      span= " "
      = form.label "#{field.method_name}[#{name}]", name
      span= ": "
      = form.text_field "#{field.method_name}[#{name}]", value: val
      span= " "
      = link_to "(удалить)", "#", class: "hash_element_delete_link"
      
  - _template = capture do
    - name, val = "new", ""
    p
      = link_to "(изм)", "#", class: "hash_element_renamer_link"
      span= " "
      = form.label "#{field.method_name}[#{name}]", name
      span= ": "
      = form.text_field "#{field.method_name}[#{name}]", value: val
      span= " "
      = link_to "(удалить)", "#", class: "hash_element_delete_link"
  p
    = link_to "добавить", "#", class: "hash_element_add_link", data: {template: _template.html_safe}
      
- when :full
  - field.value.each_pair do |name, val|
    p
      = form.text_field nil, value: name, class: 'hash_element_key_field', name: ""
      span= ": "
      = form.text_field "#{field.method_name}[#{name}]", value: val
      span= " #{name} "
      = link_to "(удалить)", "#", class: "hash_element_delete_link"
      
  - _template = capture do
    - name, val = "new", ""
    p
      = form.text_field nil, value: name, class: 'hash_element_key_field', name: ""
      span= ": "
      = form.text_field "#{field.method_name}[#{name}]", value: val
      span= " #{name} "
      = link_to "(удалить)", "#", class: "hash_element_delete_link"
  p
    = link_to "добавить", "#", class: "hash_element_add_link", data: {template: _template.html_safe}
